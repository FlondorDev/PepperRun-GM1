<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pro</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sopra=false
flash=0
statcalm=0
boosths=0;
boosthd=0;
doppiosalto=1;
hsp= 0;
vsp = 0;
grv = 0.5;
wsp = 8;
AnalogicoD=0
AnalogicoS=0 
//canjump=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description Insert description here
// You can write your code in this editor
statcalm=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>	if(alarm[0]==0) instance_destroy(obj_wooshNO);
	alarm[0]--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(y&gt;1200) global.Hp=0;

var haxis = gamepad_axis_value(0, gp_axislh);
if haxis &gt; 0.3
{
AnalogicoD=1
}
else
{
AnalogicoD=0
}
if haxis &lt; -0.3
{
AnalogicoS=1
}
else
{
AnalogicoS=0
}
key_jump = (keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0,gp_face1));
key_left = (keyboard_check(vk_left) || gamepad_button_check(0,gp_padl) || AnalogicoS ||  keyboard_check(ord("A")));
key_right = (keyboard_check(vk_right) || gamepad_button_check(0,gp_padr) || AnalogicoD || keyboard_check(ord("D")));


var move = key_right - key_left;

vsp+= grv;

hsp = move * wsp;

if(place_meeting(x+hsp,y,p_col))
{
while(!place_meeting(x+sign(hsp),y,p_col))
{
x += sign(hsp);
}
hsp=0;
}

x += hsp;

if(place_meeting(x,y+vsp,p_col))
{
while(!place_meeting(x,y+sign(vsp),p_col))
{
y += sign(vsp);
}
vsp=0;
}

y += vsp;

//canjump-=1;

if (place_meeting(x,y+1,p_col)) doppiosalto=2;

if ((doppiosalto&gt;0) &amp;&amp; (key_jump))/*(canjump&gt;0) &amp;&amp; (key_jump*/
{
vsp = -13;
doppiosalto-=1;
//canjump=0;
}

if(!place_meeting(x,y+1,p_col))
{
sprite_index = spr_proJUMP;
image_speed = 0;
if(sign(vsp)&gt;0) image_index=1; else image_index=0;

}

{/*
if(sprite_index == spr_proJUMP)
{
repeat(5)
{
with (instance_create_layer(x,bbox_bottom,"Bullet",obj_dust))
{
vsp = 0;
}
}
}*/

//canjump=10;
image_speed=1;
if(hsp==0)
{
sprite_index=spr_pro;
}
else
{
sprite_index= spr_proRUN;
}

}

if(hsp!=0) image_xscale = sign(hsp);


//check vita
if(global.Hp&gt;global.MaxHp)
{
  global.Hp=global.MaxHp;
}

if(global.Hp==0)
{
  instance_change(obj_playermorto,true)
  if(sign(hsp) !=0) image_xscale = sign(hsp);
}

if (global.preso==1)
{
   if(global.timerHP&gt;0) 
   global.timerHP--;
   global.soldi++;
}
if(global.soldi&gt;global.punteggio) global.punteggio=global.soldi;

if(global.timerHP==0) global.Hp=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description Insert description here
// You can write your code in this editor
draw_self();

if(flash&gt;0)
{
flash--;
draw_self();
shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
